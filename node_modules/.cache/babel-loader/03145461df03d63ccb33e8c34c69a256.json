{"ast":null,"code":"var _jsxFileName = \"/Users/Donna/Desktop/Clicky-Game/src/components/Cards/index.js\";\nimport React from \"react\";\nimport Nav from \"../Navbar\";\nimport Card from \"../Card\";\nimport cards from \"../../clickycards.json\";\nimport \"./style.css\";\n\nvar shuffle = require('shuffle-array'); // By extending the React.Component class, Counter inherits functionality from it\n\n\nclass Cards extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      hint: \"Click an image to begin!\",\n      currentScore: 0,\n      topScore: 0,\n      cards,\n      alreadyClickedId: []\n    };\n\n    this.cardClick = id => {\n      // We always use the setState method to update a component's state\n      // this.setState({ hint: id });\n      if (this.state.alreadyClickedId.includes(id)) {\n        this.setState({\n          hint: \"You guessed incorrectly!\",\n          currentScore: 0,\n          alreadyClickedId: []\n        });\n      } else {\n        this.setState({\n          hint: \"You guessed correctly!\"\n        });\n        this.setState({\n          currentScore: this.state.currentScore + 1\n        });\n\n        if (this.state.topScore < this.state.currentScore + 1) {\n          this.setState({\n            topScore: this.state.currentScore + 1\n          });\n        }\n\n        this.state.alreadyClickedId.push(id);\n      } // the condition of wining\n      // because react is slow in updating scores so there is a +1\n\n\n      if (this.state.currentScore + 1 === 12) {\n        this.setState({\n          hint: \"You win!\",\n          currentScore: 0,\n          alreadyClickedId: []\n        });\n      } // npm shuffle package (shuffle an array)\n\n\n      this.setState({\n        cards: shuffle(this.state.cards)\n      });\n    };\n  }\n\n  // The render method returns the JSX that should be rendered\n  render() {\n    return React.createElement(\"div\", {\n      className: \"cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      hint: this.state.hint,\n      currentScore: this.state.currentScore,\n      topScore: this.state.topScore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"cards-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, this.state.cards.map(x => React.createElement(Card, {\n      id: x.id,\n      imgUrl: x.imageUrl,\n      onClick: this.cardClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Cards;","map":{"version":3,"sources":["/Users/Donna/Desktop/Clicky-Game/src/components/Cards/index.js"],"names":["React","Nav","Card","cards","shuffle","require","Cards","Component","state","hint","currentScore","topScore","alreadyClickedId","cardClick","id","includes","setState","push","render","map","x","imageUrl"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAO,aAAP;;AACA,IAAIC,OAAO,GAAGC,OAAO,CAAC,eAAD,CAArB,C,CAGA;;;AACA,MAAMC,KAAN,SAAoBN,KAAK,CAACO,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAElCC,KAFkC,GAE1B;AACNC,MAAAA,IAAI,4BADE;AAENC,MAAAA,YAAY,EAAE,CAFR;AAGNC,MAAAA,QAAQ,EAAE,CAHJ;AAINR,MAAAA,KAJM;AAKNS,MAAAA,gBAAgB,EAAG;AALb,KAF0B;;AAAA,SAUlCC,SAVkC,GAUrBC,EAAD,IAAQ;AAClB;AACA;AACA,UAAI,KAAKN,KAAL,CAAWI,gBAAX,CAA4BG,QAA5B,CAAqCD,EAArC,CAAJ,EAA6C;AAC3C,aAAKE,QAAL,CAAc;AAACP,UAAAA,IAAI,EAAC,0BAAN;AAAkCC,UAAAA,YAAY,EAAC,CAA/C;AAAkDE,UAAAA,gBAAgB,EAAC;AAAnE,SAAd;AACD,OAFD,MAGI;AACF,aAAKI,QAAL,CAAc;AAACP,UAAAA,IAAI,EAAC;AAAN,SAAd;AACA,aAAKO,QAAL,CAAc;AAACN,UAAAA,YAAY,EAAC,KAAKF,KAAL,CAAWE,YAAX,GAAwB;AAAtC,SAAd;;AACA,YAAI,KAAKF,KAAL,CAAWG,QAAX,GAAoB,KAAKH,KAAL,CAAWE,YAAX,GAAwB,CAAhD,EAAkD;AAChD,eAAKM,QAAL,CAAc;AAACL,YAAAA,QAAQ,EAAC,KAAKH,KAAL,CAAWE,YAAX,GAAwB;AAAlC,WAAd;AACD;;AACD,aAAKF,KAAL,CAAWI,gBAAX,CAA4BK,IAA5B,CAAiCH,EAAjC;AACD,OAbiB,CAclB;AACA;;;AACA,UAAI,KAAKN,KAAL,CAAWE,YAAX,GAAwB,CAAxB,KAA8B,EAAlC,EAAqC;AACnC,aAAKM,QAAL,CAAc;AAACP,UAAAA,IAAI,EAAC,UAAN;AAAkBC,UAAAA,YAAY,EAAC,CAA/B;AAAkCE,UAAAA,gBAAgB,EAAC;AAAnD,SAAd;AACD,OAlBiB,CAmBlB;;;AACA,WAAKI,QAAL,CAAc;AAACb,QAAAA,KAAK,EAACC,OAAO,CAAC,KAAKI,KAAL,CAAWL,KAAZ;AAAd,OAAd;AACD,KA/BiC;AAAA;;AAiClC;AACAe,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAG,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AACE,MAAA,IAAI,EAAI,KAAKV,KAAL,CAAWC,IADrB;AAEE,MAAA,YAAY,EAAE,KAAKD,KAAL,CAAWE,YAF3B;AAGE,MAAA,QAAQ,EAAI,KAAKF,KAAL,CAAWG,QAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKH,KAAL,CAAWL,KAAX,CAAiBgB,GAAjB,CAAqBC,CAAC,IACrB,oBAAC,IAAD;AACE,MAAA,EAAE,EAAEA,CAAC,CAACN,EADR;AAEE,MAAA,MAAM,EAAEM,CAAC,CAACC,QAFZ;AAGE,MAAA,OAAO,EAAE,KAAKR,SAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CALF,CADF;AAsBD;;AAzDiC;;AA4DpC,eAAeP,KAAf","sourcesContent":["import React from \"react\";\nimport Nav from \"../Navbar\";\nimport Card from \"../Card\"; \nimport cards from \"../../clickycards.json\"; \nimport \"./style.css\"; \nvar shuffle = require('shuffle-array'); \n\n\n// By extending the React.Component class, Counter inherits functionality from it\nclass Cards extends React.Component {\n  // Setting the initial state of the component\n  state = {\n    hint: `Click an image to begin!`,\n    currentScore: 0,\n    topScore: 0,\n    cards,\n    alreadyClickedId : [],\n  };\n  \n  cardClick = (id) => {\n    // We always use the setState method to update a component's state\n    // this.setState({ hint: id });\n    if (this.state.alreadyClickedId.includes(id)){\n      this.setState({hint:\"You guessed incorrectly!\", currentScore:0, alreadyClickedId:[]});\n    }\n    else{\n      this.setState({hint:\"You guessed correctly!\"});\n      this.setState({currentScore:this.state.currentScore+1});\n      if (this.state.topScore<this.state.currentScore+1){\n        this.setState({topScore:this.state.currentScore+1})\n      }\n      this.state.alreadyClickedId.push(id); \n    }\n    // the condition of wining\n    // because react is slow in updating scores so there is a +1\n    if (this.state.currentScore+1 === 12){\n      this.setState({hint:\"You win!\", currentScore:0, alreadyClickedId:[]}); \n    }\n    // npm shuffle package (shuffle an array)\n    this.setState({cards:shuffle(this.state.cards)}); \n  };\n\n  // The render method returns the JSX that should be rendered\n  render() {\n    return (\n      <div className = \"cards\">\n        <Nav \n          hint = {this.state.hint}\n          currentScore={this.state.currentScore}\n          topScore = {this.state.topScore}/>\n        <div className=\"cards-container\">\n          {this.state.cards.map(x => (\n            <Card\n              id={x.id}\n              imgUrl={x.imageUrl} \n              onClick={this.cardClick}\n            />\n          ))}\n          {/* <Card\n              onClick={this.cardClick}\n              id= \"3\"\n              imgUrl=\"https://images.pexels.com/photos/414612/pexels-photo-414612.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260\"\n            /> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Cards;\n"]},"metadata":{},"sourceType":"module"}